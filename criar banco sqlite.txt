create table alunos(
matricula varchar(20) NOT NULL PRIMARY KEY,
nome vachar(50) not null);

create table chaves(
numchave integer primary key autoincrement);

create table emprestimos(
id integer primary key autoincrement,
emp_aluno varchar(20),
emp_chave integer,
dataemp varchar(16) NOT NULL DEFAULT (datetime('now', '-3 hour')),
datadev varchar(16),
foreign key(emp_aluno) references alunos (matricula),
foreign key(emp_chave) references chaves (numchave)
);

select strftime('%Y-%m-%d %H:%M', 'now', '-3 hour')

Código para pegar alunos sem empréstimo há muito tempo:
select matricula from usuario where matricula not in (select distinct emp_usuario from emprestimo where datadev > (strftime('%Y', 'now', '-1 year')));

create table usuario(
matricula varchar(20) primary key not null, 
nome varchar(60) not null);

insert into usuario(matricula,nome) select matricula,nome from alunos;

create table objeto(
id integer PRIMARY KEY AUTOINCREMENT,
tipo varchar(20));

insert into objeto(id) select numchave from chaves;

create table emprestimo(
id integer primary key autoincrement,
emp_usuario varchar(20),
emp_objeto integer,
dataemp varchar(16) NOT NULL DEFAULT (strftime('%Y-%m-%d %H:%M', 'now', '-3 hour')),
datadev varchar(16),
foreign key(emp_usuario) references usuario (matricula) on delete cascade on update cascade,
foreign key(emp_objeto) references objeto(id) on delete cascade on update cascade
);

insert into emprestimo select * from emprestimos;

drop table ;

Insert into emprestimos (emp_aluno, emp_chave, dataemp, datadev) values


UPDATE emprestimos SET datadev=(datetime('now','-3 hour')) WHERE emp_chave = ? AND datadev IS NULL


select alunos.matricula, alunos.nome, emprestimos.emp_chave, emprestimos.dataemp from alunos INNER JOIN emprestimos on (alunos.matricula = emp_aluno) WHERE datadev IS NULL ORDER BY dataemp;


select matricula from alunos WHERE NOT EXISTS (select emp_aluno from emprestimos where alunos.matricula = emp_aluno);

delete from alunos WHERE NOT EXISTS (select emp_aluno from emprestimos where alunos.matricula = emp_aluno);


insert into chaves values(null);


select* from emprestimos where dataemp < Datetime ('2017-11-12 00:00:00');

delete from emprestimos where dataemp < Datetime ('2017-07-12 00:00:00');
delete from emprestimos where dataemp < Datetime ('2016-07-01');

OBS NESSE DELETE DE CIMA DELETA TAMBEM A DATA ESPECIFICADA, NÃO SÓ AS MENORES QUE ELA


select id from emprestimos where datadev IS NULL;


insert into emprestimos (emp_aluno, emp_chave, dataemp) values ('1856529', 9, (datetime('now', '-1 month')));


select alunos.matricula, alunos.nome, emprestimos.emp_chave, emprestimos.dataemp, emprestimos.datadev from alunos
INNER JOIN emprestimos on (alunos.matricula = emp_aluno)
WHERE dataemp <= (datetime('now', '-3 hour')) AND dataemp >= (strftime('%Y', 'now') || '-' || strftime('%m', 'now')) ORDER BY dataemp;


select alunos.matricula, alunos.nome, emprestimos.emp_chave, emprestimos.dataemp, emprestimos.datadev from alunos
                 INNER JOIN emprestimos on (alunos.matricula = emp_aluno)
                 WHERE dataemp >= (strftime('%Y', 'now') || '-' || '09')
                 AND dataemp < (strftime('%Y', 'now') || '-' || '10') ORDER BY dataemp;



select alunos.matricula, alunos.nome, emprestimos.emp_chave, emprestimos.dataemp, emprestimos.datadev from alunos
                INNER JOIN emprestimos on (alunos.matricula = emp_aluno)
                WHERE dataemp >= (strftime('%Y-%m', 'now', '-1 month'))
                AND dataemp < date('now', 'start of month') ORDER BY dataemp;


select alunos.matricula, alunos.nome, emprestimos.emp_chave, emprestimos.dataemp, emprestimos.datadev from alunos
                INNER JOIN emprestimos on (alunos.matricula = emp_aluno)
                WHERE dataemp >= (strftime('%Y-%m', 'now', '-1 month'))
                AND dataemp < date('now', 'start of month') ORDER BY dataemp;



O caminho relativo precisa ser depois da pasta com o nome do projeto
"jdbc:sqlite:lib\\bancodedados\\BDchaves"
